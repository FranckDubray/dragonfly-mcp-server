
# üîç M√âTHODOLOGIE AUDIT TOOLS

## √âtat: 21/40 audit√©s

Tools restants (19): astronomy, coingecko, excel_to_sqlite, ffmpeg_frames, flight_tracker, git, imap, math, news_aggregator, office_to_pdf, ollama_local, open_meteo, pdf2text, pdf_download, reddit_intelligence, script_executor, ssh_admin, universal_doc_scraper, youtube_search

Dernier audit: device_location (21/40)
- Score: 9.6/10
- Tests: 3/3 validation OK ; NR 3/5 OK (2 √† faire en QA)
- Status: COMPLET et valid√© (commit local), push apr√®s QA NR

---

## WORKSPACE (r√®gles fermes)
- Toujours garder charg√©s: LLM_DEV_GUIDE.md et ce fichier de m√©thodo (r√©f√©rences)
- UN SEUL tool √† la fois dans le workspace (pas de parall√®le)
- Auto-sync: writeFile et deleteFile mettent √† jour automatiquement (pas de reload)
- Limite: 500 KB total ‚Üí unload syst√©matique des fichiers du tool √† la fin
- Jamais /tools?reload=1 pendant l‚Äôaudit

---

## PROCESS (10 √©tapes) + Mermaid

```mermaid
flowchart TD
  A[Start] --> B[Select_tool]
  B --> C[Load_tool_files]
  C --> D[Pre_tests_3]
  D --> E[Abort_document]
  D --> F[Audit_spec_code]
  F --> G{Nonconformities}
  G --> H[Fixes]
  G --> I[Validation_tests]
  H --> I
  I --> J{Validation_OK}
  J --> H
  J --> K[NR_tests_5]
  K --> L{NR_100_OK}
  L --> H
  L --> M[Changelog_update]
  M --> N{Gate_commit_push}
  N --> O[Commit_push]
  N --> P[Commit_local_only]
  O --> Q[Unload_update_procedure]
  P --> Q
  E --> Q
```

---

## √âtapes d√©taill√©es et garde-fous

### 1) S√âLECTION
- Tirage al√©atoire parmi Tools restants
- Un seul tool jusqu‚Äô√† fin de proc√©dure

### 2) CHARGEMENT
- Fichiers √† charger:
  - src/tools/{tool}.py
  - src/tool_specs/{tool}.json
  - src/tools/_{tool}/*.py
- Ne rien charger d‚Äôun autre tool

### 3) TESTS PR√âLIMINAIRES (r√©els, un par un)
- A. Charger la spec JSON localement (si pas d√©j√† charg√©e)
- B. Minimum 3 tests baseline:
  - Test 1: op√©ration la plus simple
  - Test 2: op√©ration avec param√®tres
  - Test 3: v√©rification du r√©sultat (structure et contenu)
- C. Si tests impossibles (pas d‚Äôacc√®s ou credentials): ABORT imm√©diat, documenter, passer au tool suivant
- D. Noter: outputs, erreurs, validation, truncation, counts, timeouts

### 4) AUDIT (spec et code)
- JSON Spec:
  - category valide (une des 10 cl√©s), displayName
  - parameters.type=object, arrays avec items, enums complets
  - required corrects, defaults explicites, additionalProperties:false
  - descriptions claires (1 ligne max)
- Code:
  - Output minimal (pas de metadata verbeuse type success ou method)
  - Lists: limit par d√©faut et truncation warnings et counts
  - Validation stricte des params (validators)
  - Try catch global (api), logging INFO WARNING ERROR
  - Timeouts coh√©rents; pas de side effects √† l‚Äôimport
  - Fichiers < 7KB (sinon d√©coupage), code mort supprim√©

### 5) CORRECTIFS
- Prioriser: CRITICAL puis MAJOR puis IMPROVEMENTS
- D√©couper fichiers > 7KB
- Ajouter renforcement validation, logging, warnings de truncation

### 6) TESTS DE VALIDATION (obligatoires)
- Rejouer tous les tests pr√©liminaires et nouveaux cas
- Tout doit passer avant NR

### 7) TESTS NON R√âGRESSION (obligatoires)
- Identifier toutes les fonctionnalit√©s du tool
- Tester exhaustivement (minimum 5 cas, inclure n√©gatifs et fallback)
- Tableau synth√®se obligatoire
- Si r√©gression: STOP puis corriger puis reprendre √©tape 6

### 8) CHANGELOG (Unreleased)
- Ajouter entr√©e concise, la plus r√©cente en premier
- Template:
  - {tool} - [DATE] X.X->Y.Y/10
  - Fixed / Added / Technical / Tests / SCORE FINAL / Known Issues

### 9) COMMIT ET PUSH (gate)
- Autoris√© seulement si:
  - Tests validation OK
  - NR 100 OK (incluant cas n√©gatifs et fallback)
  - Aucune r√©gression d√©tect√©e
- Sinon: commit local uniquement, push apr√®s QA compl√©t√©e

### 10) UNLOAD ET MISE A JOUR PROC√âDURE
- Unload: tous les fichiers du tool uniquement (garder LLM_DEV_GUIDE et m√©thodo charg√©s)
- Mise √† jour de ce fichier: incr√©menter compteur, retirer tool de restants
- Commit doc: docs(audit): update methodology - {tool} audited (X/40)

---

## Checklists par √©tape

### Pr√© commit (obligatoire)
- [ ] Spec conforme (cat√©gorie, enums, required, defaults, additionalProperties:false)
- [ ] Validation stricte params (validators)
- [ ] Try catch global en API et logging
- [ ] Output minimal (aucune metadata superflue)
- [ ] Limits et truncation warnings si listes
- [ ] Fichiers < 7KB, code mort supprim√©
- [ ] Tests validation 100 OK
- [ ] NR au moins 5 cas, 100 OK (incl. n√©gatifs et fallback)
- [ ] Changelog Unreleased mis √† jour, entr√©e en t√™te

### Post commit
- [ ] Push si NR 100 OK; sinon attendre QA
- [ ] Pas d‚Äôautres tools charg√©s
- [ ] Proc√©dure mise √† jour (compteur, liste)

---

## Gabarits utiles

### Tableau NR (exemple)
| ID | Fonctionnalit√© | Cas | Attendu | R√©sultat | Statut |
|----|-----------------|-----|---------|----------|--------|
| NR1 | Op√©ration A | d√©faut | 200 et champs cl√©s | OK | OK |
| NR2 | Op√©ration B | param X | 200 et champs | OK | OK |
| NR3 | Fallback | provider down | bascule | A QA | EN ATTENTE |
| NR4 | Entr√©e invalide | provider=bad | ValueError | A QA | EN ATTENTE |
| NR5 | None cleanup | champs absents | absents sortie | OK | OK |

### Entr√©e CHANGELOG (copier coller)
```
### {tool} - [YYYY-MM-DD] X.X->Y.Y/10

**Fixed**: ...
**Added**: ...
**Technical**: conformit√© XX->YY
**Tests**: validation OK; NR N/N OK
**SCORE FINAL: Y.Y/10**
**Known Issues**: ...
```

---

## Am√©liorations apport√©es √† la m√©thodo
- Diagramme Mermaid corrig√© sans caract√®res sp√©ciaux dans les labels
- R√®gle explicite: garder LLM_DEV_GUIDE.md et la m√©thodo charg√©s en permanence
- Gate commit et push clarifi√©: pas de push avant NR 100 OK (sinon commit local uniquement)
- Ordre CHANGELOG standardis√©: derni√®re entr√©e en premier dans Unreleased
- Checklists Pr√© commit et Post commit plus op√©rationnelles
- Gabarits NR et Changelog pr√™ts √† l‚Äôemploi

---

## Rappels critiques
1) Un seul tool √† la fois; pas de /tools?reload=1
2) Tests r√©els obligatoires avant audit; ABORT si impossibles
3) Validation stricte, logging, outputs minimaux, limits et truncation
4) Pas de push tant que NR < 100 (inclure n√©gatifs et fallback)
5) Changelog: entr√©e la plus r√©cente en premier dans Unreleased
6) Unload seulement les fichiers du tool, pas les documents de r√©f√©rence
