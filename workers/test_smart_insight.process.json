{
  "version": "1.0",
  "process_version": "1.0.1-test-llm-fixed",
  "metadata": {
    "description": "Smart Daily Insight Generator - Tests call_llm with context routing and quality validation",
    "author": "orchestrator-test-team",
    "features": [
      "Multiple call_llm calls",
      "Decision enum_from_field (3 routes)",
      "Decision truthy (quality check)",
      "Complex context resolution",
      "Scopes lifecycle",
      "Retry policies on LLM"
    ]
  },
  "worker_ctx": {
    "timezone": "UTC",
    "sleep_seconds": 30,
    "llm_model": "gpt-4o-mini",
    "llm_temperature": 0.7,
    "llm_max_tokens": 500,
    "retry_defaults": {
      "max": 2,
      "delay_sec": 5
    }
  },
  "graph": {
    "nodes": [
      {
        "name": "START",
        "type": "start"
      },
      {
        "name": "get_timestamp",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "date",
          "operation": "now",
          "tz": "UTC"
        },
        "outputs": {
          "result": "cycle.data.timestamp"
        },
        "timeout_sec": 10
      },
      {
        "name": "get_location",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "device_location",
          "operation": "get_location"
        },
        "outputs": {
          "location": "cycle.data.location",
          "coordinates": "cycle.data.coordinates"
        },
        "timeout_sec": 15
      },
      {
        "name": "get_weather",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "open_meteo",
          "operation": "current_weather",
          "lat": "${cycle.data.coordinates.latitude}",
          "lon": "${cycle.data.coordinates.longitude}"
        },
        "outputs": {
          "weather": "cycle.data.weather"
        },
        "timeout_sec": 15,
        "retry": {
          "max": 2,
          "delay_sec": 3
        }
      },
      {
        "name": "get_moon_phase",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "astronomy",
          "operation": "moon_phase",
          "latitude": "${cycle.data.coordinates.latitude}",
          "longitude": "${cycle.data.coordinates.longitude}"
        },
        "outputs": {
          "moon": "cycle.data.moon"
        },
        "timeout_sec": 15
      },
      {
        "name": "classify_context",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "call_llm",
          "operation": "call",
          "model": "${worker.llm_model}",
          "messages": [
            {
              "role": "system",
              "content": "You are a time-of-day classifier. Based on the timestamp, classify as: MORNING (5-11h), AFTERNOON (12-17h), or EVENING (18-4h). Answer with ONLY ONE WORD in uppercase."
            },
            {
              "role": "user",
              "content": "Current time: ${cycle.data.timestamp}\n\nClassify as MORNING, AFTERNOON, or EVENING:"
            }
          ],
          "temperature": 0.1,
          "max_tokens": 10
        },
        "outputs": {
          "content": "cycle.analysis.time_context"
        },
        "timeout_sec": 30,
        "retry": {
          "max": 2,
          "delay_sec": 5
        }
      },
      {
        "name": "decide_time",
        "type": "decision",
        "decision": {
          "kind": "enum_from_field",
          "input": "${cycle.analysis.time_context}",
          "normalize": "upper",
          "fallback": "default"
        }
      },
      {
        "name": "generate_morning_insight",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "call_llm",
          "operation": "call",
          "model": "${worker.llm_model}",
          "messages": [
            {
              "role": "system",
              "content": "You are a poetic morning motivator. Generate a beautiful, inspiring insight for the day ahead based on weather and lunar data. Be creative and uplifting. 2-3 sentences max."
            },
            {
              "role": "user",
              "content": "Location: ${cycle.data.location.city}, ${cycle.data.location.country}\nWeather: ${cycle.data.weather.temperature}°C, ${cycle.data.weather.weather_description}\nMoon: ${cycle.data.moon.phase_name}, ${cycle.data.moon.illumination_percent}% illuminated\n\nGenerate morning insight:"
            }
          ],
          "temperature": "${worker.llm_temperature}",
          "max_tokens": "${worker.llm_max_tokens}"
        },
        "outputs": {
          "content": "cycle.result.insight"
        },
        "timeout_sec": 45,
        "retry": {
          "max": 2,
          "delay_sec": 10
        }
      },
      {
        "name": "generate_afternoon_insight",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "call_llm",
          "operation": "call",
          "model": "${worker.llm_model}",
          "messages": [
            {
              "role": "system",
              "content": "You are a productivity coach. Generate practical, energizing tips for making the most of the afternoon, incorporating current weather and cosmic context. Be concise and actionable. 2-3 sentences max."
            },
            {
              "role": "user",
              "content": "Location: ${cycle.data.location.city}, ${cycle.data.location.country}\nWeather: ${cycle.data.weather.temperature}°C, ${cycle.data.weather.weather_description}\nMoon: ${cycle.data.moon.phase_name}\n\nGenerate afternoon productivity insight:"
            }
          ],
          "temperature": "${worker.llm_temperature}",
          "max_tokens": "${worker.llm_max_tokens}"
        },
        "outputs": {
          "content": "cycle.result.insight"
        },
        "timeout_sec": 45,
        "retry": {
          "max": 2,
          "delay_sec": 10
        }
      },
      {
        "name": "generate_evening_insight",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "call_llm",
          "operation": "call",
          "model": "${worker.llm_model}",
          "messages": [
            {
              "role": "system",
              "content": "You are a contemplative evening guide. Generate a reflective, calming insight for winding down the day, incorporating weather and lunar wisdom. Be gentle and thoughtful. 2-3 sentences max."
            },
            {
              "role": "user",
              "content": "Location: ${cycle.data.location.city}, ${cycle.data.location.country}\nWeather: ${cycle.data.weather.temperature}°C\nMoon: ${cycle.data.moon.phase_name}, ${cycle.data.moon.illumination_percent}% illuminated\n\nGenerate evening reflection:"
            }
          ],
          "temperature": "${worker.llm_temperature}",
          "max_tokens": "${worker.llm_max_tokens}"
        },
        "outputs": {
          "content": "cycle.result.insight"
        },
        "timeout_sec": 45,
        "retry": {
          "max": 2,
          "delay_sec": 10
        }
      },
      {
        "name": "validate_quality",
        "type": "decision",
        "decision": {
          "kind": "truthy",
          "input": "${cycle.result.insight}"
        }
      },
      {
        "name": "mark_success",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "date",
          "operation": "now"
        },
        "outputs": {
          "result": "cycle.result.completed_at"
        },
        "timeout_sec": 5
      },
      {
        "name": "mark_failure",
        "type": "io",
        "handler": "http_tool",
        "inputs": {
          "tool": "date",
          "operation": "now"
        },
        "outputs": {
          "result": "cycle.result.failed_at"
        },
        "timeout_sec": 5
      },
      {
        "name": "END",
        "type": "end"
      }
    ],
    "edges": [
      {"from": "START", "to": "get_timestamp"},
      {"from": "get_timestamp", "to": "get_location"},
      {"from": "get_location", "to": "get_weather"},
      {"from": "get_weather", "to": "get_moon_phase"},
      {"from": "get_moon_phase", "to": "classify_context"},
      {"from": "classify_context", "to": "decide_time"},
      
      {"from": "decide_time", "to": "generate_morning_insight", "when": "MORNING"},
      {"from": "decide_time", "to": "generate_afternoon_insight", "when": "AFTERNOON"},
      {"from": "decide_time", "to": "generate_evening_insight", "when": "EVENING"},
      
      {"from": "generate_morning_insight", "to": "validate_quality"},
      {"from": "generate_afternoon_insight", "to": "validate_quality"},
      {"from": "generate_evening_insight", "to": "validate_quality"},
      
      {"from": "validate_quality", "to": "mark_success", "when": "true"},
      {"from": "validate_quality", "to": "mark_failure", "when": "false"},
      
      {"from": "mark_success", "to": "END"},
      {"from": "mark_failure", "to": "END"}
    ]
  },
  "scopes": [
    {
      "name": "data",
      "reset_on": ["START"],
      "seed": {}
    },
    {
      "name": "analysis",
      "reset_on": ["START"],
      "seed": {}
    },
    {
      "name": "result",
      "reset_on": ["START"],
      "seed": {}
    }
  ],
  "graph_mermaid": "graph TD\n  START-->get_timestamp\n  get_timestamp-->get_location\n  get_location-->get_weather\n  get_weather-->get_moon_phase\n  get_moon_phase-->classify_context[🤖 LLM: Classify]\n  classify_context-->decide_time{Decision: enum}\n  decide_time-->|MORNING|morning_insight[🤖 LLM: Morning]\n  decide_time-->|AFTERNOON|afternoon_insight[🤖 LLM: Afternoon]\n  decide_time-->|EVENING|evening_insight[🤖 LLM: Evening]\n  morning_insight-->validate{Decision: truthy}\n  afternoon_insight-->validate\n  evening_insight-->validate\n  validate-->|true|mark_success\n  validate-->|false|mark_failure\n  mark_success-->END\n  mark_failure-->END"
}
