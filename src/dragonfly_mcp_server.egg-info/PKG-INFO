Metadata-Version: 2.4
Name: dragonfly-mcp-server
Version: 1.0.0
Summary: Dragonfly MCP Server (FastAPI)
Author-email: MCP Developer <dev@example.com>
License: MIT
Project-URL: Homepage, https://github.com/FranckDubray/dragonfly-mcp-server
Project-URL: Repository, https://github.com/FranckDubray/dragonfly-mcp-server.git
Project-URL: Issues, https://github.com/FranckDubray/dragonfly-mcp-server/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: fastapi>=0.104.0
Requires-Dist: uvicorn[standard]>=0.24.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: requests>=2.28.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: pypdf>=4.2.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: httpx>=0.24.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"





<div align="center">

<!-- Local logo for reliability (placed in assets/) -->
<img src="assets/LOGO_DRAGONFLY_HD.jpg" alt="Dragonfly logo" width="120" style="background:#ffffff; padding:6px; border-radius:8px;" />

# üêâ Dragonfly MCP Server

Serveur MCP multi‚Äëoutils, rapide et extensible, propuls√© par FastAPI. D√©couverte automatique des tools, ex√©cution s√©curis√©e, orchestrateur LLM avanc√©, et panneau de contr√¥le web.

[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](./LICENSE)
![Python](https://img.shields.io/badge/Python-3.11%2B-3776AB)
![FastAPI](https://img.shields.io/badge/FastAPI-%F0%9F%9A%80-009688)
![Status](https://img.shields.io/badge/Status-Active-success)

</div>

---

## ‚ú® Vue d'ensemble
Dragonfly MCP Server expose des ¬´ tools ¬ª (au format OpenAI tools) via des endpoints HTTP simples:
- D√©couverte automatique des outils sous `src/tools/`
- Ex√©cution d'un tool via `POST /execute`
- Orchestration LLM en 2 phases via `call_llm` (avec usage cumulatif)
- Panneau de contr√¥le web pour configurer et tester (`/control`)

> Pour les d√©tails d'API (endpoints, s√©rialisation JSON, etc.), consultez aussi [src/README.md](./src/README.md).

---

## üìö Sommaire
- [Fonctionnalit√©s](#-fonctionnalit√©s)
- [Demo rapide](#-demo-rapide)
- [Installation](#-installation)
- [D√©marrage](#-d√©marrage)
- [Prerequis Python](#-prerequis-python)
- [Endpoints](#-endpoints)
- [Outils inclus](#-outils-inclus)
- [Orchestrateur LLM (call_llm)](#-orchestrateur-llm-call_llm)
- [Configuration](#-configuration)
- [S√©curit√©](#-s√©curit√©)
- [Structure du projet](#-structure-du-projet)
- [Migration notes](#-migration-notes)
- [Pour les LLM ¬´ d√©veloppeurs ¬ª](#-pour-les-llm-d√©veloppeurs)
- [Feuille de route](#-feuille-de-route)
- [Licence](#-licence)

---

## üöÄ Fonctionnalit√©s
- Auto‚Äëreload des tools (d√©tection de nouveaux fichiers dans `src/tools/`)
- JSON ¬´ s√ªr ¬ª: grands entiers, NaN/Infinity sanitis√©s
- Orchestration LLM streaming en 2 phases (avec cumul d'usage multi‚Äëniveaux)
- Panneau de contr√¥le web (`/control`)
- Outils pr√™ts √† l'emploi: Git/GitHub, SQLite, PDF, Date/Heure, Math (HP), GitBook, Reddit, Universal Doc Scraper, Script Executor, FFmpeg frames, Academic Research, **IMAP email (multi-comptes)**, etc.

---

## ‚ö° Demo rapide
Ex√©cuter un tool en une requ√™te:

```bash
curl -s -X POST http://127.0.0.1:8000/execute \
 -H 'Content-Type: application/json' \
 -d '{"tool":"date","params":{"operation":"today"}}'
```

Lire les emails non lus (IMAP):

```bash
curl -s -X POST http://127.0.0.1:8000/execute \
 -H 'Content-Type: application/json' \
 -d '{
   "tool":"imap",
   "params":{
     "provider":"gmail",
     "operation":"search_messages",
     "folder":"inbox",
     "query":{"unseen":true},
     "max_results":20
   }
 }'
```

Orchestrer un LLM (r√©ponse texte) :

```bash
curl -s -X POST http://127.0.0.1:8000/execute \
 -H 'Content-Type: application/json' \
 -d '{
   "tool":"call_llm",
   "params":{ "message":"Dis bonjour en fran√ßais.", "model":"gpt-4o" }
 }'
```

Lister les tools disponibles:

```bash
curl -s http://127.0.0.1:8000/tools
```

---

## üõ† Installation
Pr√©requis: Python 3.11 ou 3.12. V√©rifiez avec: `python3 --version`. Si votre version est < 3.11, installez via pyenv/conda ou depuis python.org.

```bash
git clone https://github.com/FranckDubray/dragonfly-mcp-server.git
cd dragonfly-mcp-server
python -m venv venv
source venv/bin/activate   # Windows: venv\Scripts\Activate.ps1
pip install -U pip
pip install -e ".[dev]"
```

## ‚ñ∂Ô∏è D√©marrage
- Linux/macOS: `./scripts/dev.sh`
- Windows: `scripts\dev.ps1`

Par d√©faut: http://127.0.0.1:8000

Panneau de contr√¥le: http://127.0.0.1:8000/control

---

## üêç Prerequis Python
- Version minimale recommand√©e: Python 3.11 ou 3.12.
- Le projet utilise des fonctionnalit√©s modernes (annotations/typing, comportement de json/ints, etc.) pouvant √©chouer avec des versions trop anciennes.
- Les scripts de d√©marrage v√©rifient automatiquement la version install√©e et abortent si la version est trop ancienne.

> Astuce: utilisez pyenv pour installer la bonne version, ou conda/mamba.

---

## üîó Endpoints
- `GET /tools` ‚Äî liste des tools (spec incluse). Ajouter `?reload=1` pour forcer un rescannage.
- `POST /execute` ‚Äî ex√©cuter un tool: `{ tool: string, params: object }`
- `GET /config` / `POST /config` ‚Äî lire/√©crire la configuration (.env)
- `GET /control` ‚Äî panneau HTML
- `GET /control.js` ‚Äî script du panneau

D√©tails √©tendus: [src/README.md](./src/README.md)

---

## üß™ Outils inclus
- `call_llm`: orchestrateur LLM (2 phases, usage cumulatif)
- `math`: calcul num√©rique/HP, symbolique, alg√®bre lin√©aire (+ extensions), solveurs, s√©ries, nombres premiers, sommes
- `date`: now/today, diff, add, format, parse, weekday, week_number
- `git`: GitHub API + Git local (op√©rations s√©curis√©es)
- `gitbook`: discovery/lecture/search GitBook
- `sqlite_db`: SQLite chroot (bases sous `<projet>/sqlite3`)
- `pdf_search` / `pdf2text`
- `reddit_intelligence`
- `universal_doc_scraper`
- `script_executor`: ex√©cution de scripts Python sandbox√©s orchestrant des tools
- `ffmpeg_frames`: extraction d'images/frames d'une vid√©o via FFmpeg (d√©tection native PyAV, debug de similarit√©, exec_time_sec)
- `academic_research_super`: pipeline avanc√© de recherche acad√©mique (agr√©gation, scraping, synth√®se)
- `imap`: **acc√®s universel aux emails via IMAP** (Gmail, Outlook, Yahoo, iCloud, Infomaniak, serveurs custom) avec gestion multi-comptes

Specs JSON (OpenAI tools) correspondantes dans `src/tool_specs/`.

---

## üìß Tool IMAP (multi-comptes)

Le tool IMAP permet de g√©rer plusieurs comptes email simultan√©ment via IMAP.

### Providers support√©s
- **Gmail** : `provider: "gmail"`
- **Outlook** : `provider: "outlook"`
- **Yahoo** : `provider: "yahoo"`
- **iCloud** : `provider: "icloud"`
- **Infomaniak** : `provider: "infomaniak"`
- **Custom** : `provider: "custom"` (serveur personnalis√©)

### Configuration multi-comptes

Variables d'environnement par provider (dans `.env`) :

```bash
# Gmail
IMAP_GMAIL_EMAIL=votre.email@gmail.com
IMAP_GMAIL_PASSWORD=votre_mot_de_passe

# Infomaniak
IMAP_INFOMANIAK_EMAIL=contact@votredomaine.com
IMAP_INFOMANIAK_PASSWORD=mot_de_passe

# Outlook
IMAP_OUTLOOK_EMAIL=votre@outlook.com
IMAP_OUTLOOK_PASSWORD=mot_de_passe

# Custom (serveur personnalis√©)
IMAP_EMAIL=user@example.com
IMAP_PASSWORD=password
IMAP_SERVER=mail.example.com
IMAP_PORT=993
IMAP_USE_SSL=true
```

### Op√©rations disponibles
- `connect` : tester la connexion
- `list_folders` : lister les dossiers IMAP
- `search_messages` : rechercher des emails (par date, exp√©diteur, sujet, statut lu/non lu, etc.)
- `get_message` : r√©cup√©rer un email complet
- `download_attachments` : t√©l√©charger les pi√®ces jointes
- `mark_read` / `mark_unread` : marquer comme lu/non lu
- `mark_read_batch` / `mark_unread_batch` : op√©rations en lot
- `move_message` / `move_messages_batch` : d√©placer vers un autre dossier
- `mark_spam` : marquer comme spam
- `delete_message` / `delete_messages_batch` : supprimer (avec expunge optionnel)

### Exemples

**Lister les emails non lus (Gmail) :**
```bash
curl -X POST http://127.0.0.1:8000/execute \
  -H 'Content-Type: application/json' \
  -d '{
    "tool":"imap",
    "params":{
      "provider":"gmail",
      "operation":"search_messages",
      "folder":"inbox",
      "query":{"unseen":true},
      "max_results":20
    }
  }'
```

**Marquer des emails comme lus (Infomaniak) :**
```bash
curl -X POST http://127.0.0.1:8000/execute \
  -H 'Content-Type: application/json' \
  -d '{
    "tool":"imap",
    "params":{
      "provider":"infomaniak",
      "operation":"mark_read_batch",
      "folder":"inbox",
      "message_ids":["123","456","789"]
    }
  }'
```

**S√©curit√© :**
- ‚úÖ Aucun credential n'est pass√© en param√®tre du tool
- ‚úÖ Tout est lu depuis `.env` via le param√®tre `provider`
- ‚úÖ Passwords masqu√©s dans les logs

---

## üß† Orchestrateur LLM (`call_llm`)
- 1er stream (avec tools): collecte des `tool_calls`, ex√©cution c√¥t√© serveur
- 2e stream (sans tools): g√©n√©ration du texte final
- Usage cumulatif: additionne automatiquement les usages des 2 streams et de tous les appels imbriqu√©s (ex: A ‚Üí B ‚Üí sonar)
- Param√®tres cl√©s: `message`, `model`, `tool_names` (liste des tools expos√©s au mod√®le), `promptSystem`, `debug`

---

## ‚öôÔ∏è Configuration
Variables principales:
- R√©seau/serveur: `MCP_HOST`, `MCP_PORT`, `LOG_LEVEL`
- Ex√©cution: `EXECUTE_TIMEOUT_SEC`, `AUTO_RELOAD_TOOLS`, `RELOAD`
- LLM: `AI_PORTAL_TOKEN`, `LLM_ENDPOINT`, `LLM_REQUEST_TIMEOUT_SEC`, `LLM_RETURN_DEBUG`, `MCP_URL`
- JSON/entiers: `BIGINT_AS_STRING`, `BIGINT_STR_THRESHOLD`, `PY_INT_MAX_STR_DIGITS`
- IMAP: `IMAP_<PROVIDER>_EMAIL`, `IMAP_<PROVIDER>_PASSWORD` (ex: `IMAP_GMAIL_EMAIL`)
- Divers: `GITHUB_TOKEN`

Configurer via `/control` (recommand√©) ou via `.env`.

---

## üîí S√©curit√©
- SQLite chroot: DBs sous `<projet>/sqlite3` (noms valid√©s)
- Git local: op√©rations limit√©es √† la racine du projet
- `script_executor`: sandbox stricte (pas d'acc√®s non autoris√©)
- **IMAP**: credentials en `.env` uniquement, jamais en param√®tres d'appel
- Safe JSON: s√©rialisation robuste (NaN/Infinity, tr√®s grands entiers)

---

## üóÇ Structure du projet
```
src/
  app_factory.py     # FastAPI app, endpoints, auto-reload, Safe JSON
  server.py          # Entr√©e (Uvicorn) ‚Äî cr√©e l'app et lance le serveur
  config.py          # .env (load/save), masquage des secrets
  tools/             # Tous les tools (run() + spec())
    _call_llm/       # Orchestrateur LLM: core, payloads, streaming, http_client...
    _math/           # Arithm√©tique, symbolique, proba, alg√®bre lin√©aire, etc.
    _ffmpeg/         # Utilitaires FFmpeg (frames, conversion)
    _script/         # Sandbox du ScriptExecutor
    _imap/           # IMAP: presets, connection, operations, parsers, utils
  tool_specs/        # Specs JSON canoniques (OpenAI tools)
  README.md          # Doc API interne (endpoints + composants)
```

---

## üß≠ Migration notes
- Python 3.11+ requis (scripts et metadata l'imposent).
- Les scripts de dev chargent maintenant `.env` avant l'install et le lancement.
- Le dossier top-level `script_executor/` est ignor√© par Git: d√©placez vos scripts utilisateurs dans un dossier hors repo si besoin.
- Pour les fonctionnalit√©s math avanc√©es, installez `sympy`; pour haute pr√©cision, `mpmath` (optionnel).

---

## üë©‚Äçüíª Pour les LLM ¬´ d√©veloppeurs ¬ª
Vous modifiez/√©tendez le d√©p√¥t ? Lisez ce guide:
- [LLM_DEV_GUIDE.md](./LLM_DEV_GUIDE.md)
  - Conventions, invariants, checklists, pi√®ges √† √©viter
  - R√®gles de spec JSON (parameters = object, arrays ‚Üí items)
  - D√©tails sur `call_llm` (streaming, usage cumulatif) et le JSON s√ªr

---

## üó∫Ô∏è Feuille de route (extraits)
- [ ] Tests automatis√©s (tools + orchestrateur)
- [ ] Exemples interactifs dans `/control`
- [ ] Int√©gration d'auth facultative sur les endpoints sensibles
- [ ] Export de m√©triques (Prometheus)

Contributions bienvenues ‚Äî issues & PRs !

---

## üìÑ Licence
MIT ‚Äî voir [LICENSE](./LICENSE)
